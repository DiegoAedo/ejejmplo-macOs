name: Build ejejmplo on macOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Paso 1: Checkout del código
      - uses: actions/checkout@v2

      # Paso 2: Configurar Java (Temurin)
      - name: Setup Java (Temurin)
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      # Paso 3: Configurar Maven 3.8.8
      - name: Set up Maven 3.8.8
        run: |
          curl -O https://archive.apache.org/dist/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz 
          tar -xzf apache-maven-3.8.8-bin.tar.gz
          echo "$(pwd)/apache-maven-3.8.8/bin" >> $GITHUB_PATH

      # Paso 4: Descargar GraalVM CE para Java 17
      - name: Download GraalVM CE for Java 17
        run: |
          echo "Downloading GraalVM CE for Java 17..."
          curl -L -o graalvm.tar.gz "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.1/graalvm-ce-java17-darwin-amd64-22.3.1.tar.gz"
          tar -xzf graalvm.tar.gz
          echo "GRAALVM_HOME=$(pwd)/graalvm-ce-java17-22.3.1/Contents/Home" >> $GITHUB_ENV

      # Paso 5: Compilar con Maven (GluonFX)
      - name: Build with Maven (GluonFX)
        run: |
          echo "Using GraalVM at: $GITHUB_WORKSPACE/graalvm-ce-java17-22.3.1/Contents/Home"
          mvn clean gluonfx:build gluonfx:package -DgraalvmHome="$GITHUB_WORKSPACE/graalvm-ce-java17-22.3.1/Contents/Home" -DskipSigning=true

      # Paso 6: Listar archivos generados (para depuración)
      - name: List generated files
        run: |
          ls -R target/gluonfx/x86_64-darwin/

      # Paso 7: Subir el archivo .dmg como artefacto
      - name: Upload DMG as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ejejmplo-dmg
          path: target/gluonfx/x86_64-darwin/ejejmplo.dmg