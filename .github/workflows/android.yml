name: Build ejejmplo on Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2) Setup Java 17 (Temurin)
      - name: Setup Java (Temurin)
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: '17'

      # 3) Instalar Maven 3.8.8
      - name: Setup Maven 3.8.8
        run: |
          curl -O https://archive.apache.org/dist/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz
          tar -xzf apache-maven-3.8.8-bin.tar.gz
          echo "$(pwd)/apache-maven-3.8.8/bin" >> $GITHUB_PATH

      # 4) Setup Android SDK (v3), instalando Android 34
      - name: Setup Android SDK (v3)
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: "latest"
          accept-android-sdk-licenses: true
          # Todos los paquetes en una sola línea, separados por espacio
          packages: 'platforms;android-34 build-tools;34.0.0 platform-tools extras;android;m2repository extras;google;m2repository'

      # 5) Exportar variables para que Substrate sepa dónde está el SDK
      - name: Set ANDROID_SDK vars
        run: |
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV

      # (Opcional) Mostrar variables de entorno para debug
      - name: Print environment
        run: env

      # 6) Descargar GraalVM CE para Java 17
      - name: Download GraalVM CE for Java 17
        run: |
          echo "Downloading GraalVM CE for Java 17..."
          curl -L -o graalvm.tar.gz "https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.1/graalvm-ce-java17-linux-amd64-22.3.1.tar.gz"
          tar -xzf graalvm.tar.gz
          echo "GRAALVM_HOME=$(pwd)/graalvm-ce-java17-22.3.1" >> $GITHUB_ENV

      # 7) Compilar y empacar con GluonFX para Android
      - name: Build and Package (GluonFX for Android)
        run: |
          echo "Using GraalVM at: $GITHUB_WORKSPACE/graalvm-ce-java17-22.3.1"
          mvn -Pandroid gluonfx:build gluonfx:package

      # 8) En caso de fallo, mostrar logs de Substrate
      - name: Show Substrate logs on failure
        if: failure()
        run: |
          echo "=== Listing GluonFX logs ==="
          ls -R target/gluonfx/ || true
          echo "=== Showing log files ==="
          cat target/gluonfx/log/*.log || true

      # (Opcional) Subir los logs como artifact si falla
      - name: Upload Substrate logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: substrate-logs
          path: target/gluonfx/log/

      # 9) Listar archivos finales (siempre)
      - name: List generated files
        run: find . -type f

      # 10) Subir el APK como artifact (si se generó)
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ejejmplo-apk
          path: target/gluonfx/aarch64-android/ejejmplo-1.0.0.apk
